{"name": "test_xgbz", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <Test_ziyun.test_DNC.Test_device_ml object at 0x000001C7EAB45160>\n\n    @allure.story(\"修改备注\")\n    def test_xgbz(self):\n        rp_resp = requests.put(url + '/file/edit/remark',\n                               json={'versionId': versionId, 'remark': \"自动化编辑备注\"}, headers={'token': token_data})\n        assertions.assert_code(rp_resp.status_code, 200)\n        rp_resp_json = rp_resp.json()\n>       assertions.assert_in_text(rp_resp_json['message'], 'Success')\n\ntest_DNC.py:161: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Common.Assert.Assertions object at 0x000001C7E9A18908>\nbody = 'Parameter validation failed：[类型为必填项 0:分发 1:回传]'\nexpected_msg = 'Success'\n\n    def assert_in_text(self, body, expected_msg):\n        \"\"\"\n        验证response body中是否包含预期字符串\n        :param body:\n        :param expected_msg:\n        :return:\n        \"\"\"\n        try:\n            text = json.dumps(body, ensure_ascii=False)\n            # print(text)\n>           assert expected_msg in text\nE           AssertionError\n\n..\\Common\\Assert.py:59: AssertionError"}, "attachments": [{"name": "log", "source": "67ac0a94-8efc-472a-a779-1600799aa4b0-attachment.txt", "type": "text/plain"}], "start": 1600411127416, "stop": 1600411127792, "uuid": "7a910801-49e7-48a9-95ec-178f26c71f70", "historyId": "55e5471adec3b2013cbb5fb06462e094", "testCaseId": "ab028dde530875cfae372e458f46a171", "fullName": "test_DNC.Test_device_ml#test_xgbz", "labels": [{"name": "story", "value": "修改备注"}, {"name": "feature", "value": "设备目录分发页、回传页接口"}, {"name": "suite", "value": "test_DNC"}, {"name": "subSuite", "value": "Test_device_ml"}, {"name": "host", "value": "DESKTOP-FIOLAUQ"}, {"name": "thread", "value": "43096-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_DNC"}]}