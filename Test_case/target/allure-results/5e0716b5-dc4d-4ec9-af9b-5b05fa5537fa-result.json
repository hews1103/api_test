{"name": "test_hszsc", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <Test_ziyun.test_DNC.Test_device_ml object at 0x00000203CE3C3F60>\n\n    @allure.story(\"回收站彻底删除\")\n    def test_hszsc(self):\n        rp_resp = request.post_request(url=url + '/recycle/delete',\n                                       json={\"recycleIds\": [recycleId], \"fileIds\": [fileIds]}, headers=head)\n        assertions.assert_code(rp_resp.status_code, 200)\n        rp_resp_json = rp_resp.json()\n>       assertions.assert_in_text(rp_resp_json['message'], '删除成功')\n\ntest_DNC.py:235: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Common.Assert.Assertions object at 0x00000203CD20EA20>\nbody = '列表内有文件已不在回收站', expected_msg = '删除成功'\n\n    def assert_in_text(self, body, expected_msg):\n        \"\"\"\n        验证response body中是否包含预期字符串\n        :param body:\n        :param expected_msg:\n        :return:\n        \"\"\"\n        try:\n            text = json.dumps(body, ensure_ascii=False)\n            # print(text)\n>           assert expected_msg in text\nE           AssertionError\n\n..\\Common\\Assert.py:59: AssertionError"}, "attachments": [{"name": "请求", "source": "d2885c6a-0e8e-4b3f-bd75-d30df356b674-attachment.txt", "type": "text/plain"}, {"name": "响应", "source": "e7f71971-88f7-463f-9211-e265f1364fd3-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "ba684a1a-8aea-454f-95be-4aa2962c0de0-attachment.txt", "type": "text/plain"}], "start": 1600410748008, "stop": 1600410748456, "uuid": "95d39a10-99b1-4bc8-a501-d98e6fa295ee", "historyId": "9f35b3b50f7d27a8b07532cc10902d04", "testCaseId": "f3106be46e9468f7428c3cb5f3e2ef59", "fullName": "test_DNC.Test_device_ml#test_hszsc", "labels": [{"name": "feature", "value": "设备目录分发页、回传页接口"}, {"name": "story", "value": "回收站彻底删除"}, {"name": "suite", "value": "test_DNC"}, {"name": "subSuite", "value": "Test_device_ml"}, {"name": "host", "value": "DESKTOP-FIOLAUQ"}, {"name": "thread", "value": "26524-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_DNC"}]}