{"name": "test_delete2_cache", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <Test_ziyun.test_DNC.Test_device_ml object at 0x0000024681819F98>\n\n    @allure.story(\"文件再次删除到回收站\")\n    def test_delete2_cache(self):\n        rp_resp = requests.put(url + '/file/delete',\n                               json={'reason': '二次接口删除', 'fileId': fileId}, headers={'token': token_data})\n        assertions.assert_code(rp_resp.status_code, 200)\n        rp_resp_json = rp_resp.json()\n>       assertions.assert_in_text(rp_resp_json['message'], 'Success')\n\ntest_DNC.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Common.Assert.Assertions object at 0x000002468068C1D0>\nbody = 'Internal server error', expected_msg = 'Success'\n\n    def assert_in_text(self, body, expected_msg):\n        \"\"\"\n        验证response body中是否包含预期字符串\n        :param body:\n        :param expected_msg:\n        :return:\n        \"\"\"\n        try:\n            text = json.dumps(body, ensure_ascii=False)\n            # print(text)\n>           assert expected_msg in text\nE           AssertionError\n\n..\\Common\\Assert.py:59: AssertionError"}, "attachments": [{"name": "log", "source": "99f02a47-e740-49c4-abe6-52f83b344cee-attachment.txt", "type": "text/plain"}], "start": 1600411297822, "stop": 1600411298250, "uuid": "d3a78ec3-d90d-4865-91e2-98829fcb8228", "historyId": "4695cf4640d6b62fead14547b029aba4", "testCaseId": "4e4726aee5591780e9c760575bb903fd", "fullName": "test_DNC.Test_device_ml#test_delete2_cache", "labels": [{"name": "story", "value": "文件再次删除到回收站"}, {"name": "feature", "value": "设备目录分发页、回传页接口"}, {"name": "suite", "value": "test_DNC"}, {"name": "subSuite", "value": "Test_device_ml"}, {"name": "host", "value": "DESKTOP-FIOLAUQ"}, {"name": "thread", "value": "45732-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_DNC"}]}